{"version":3,"sources":["components/noUserLoggedIn.svg","serviceWorker.js","components/header.js","actions/_util.js","actions/screen.js","actions/login.js","components/sideBar.js","components/pageMask.js","components/ChatCardComponent.js","components/rootPage.js","components/loginDialog.js","reducers/login.js","reducers/screen.js","reducers/main.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","htmlFor","type","id","Component","postData","url","arguments","length","undefined","data","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","then","response","json","SHOW_SCREEN","SCREEN_NOT_FOUND","LOAD_USER_FRIENDS","LOAD_USER_FRIENDS_SUCCESS","LOAD_USER_FRIEND_ALL_MESSAGE_FINISH","LOAD_FAILURE","LOAD_ERROR","showScreen","name","includes","getAllMessagesForUser","other_user","dispatch","getState","_getState$login$userD","login","userData","user","token","username","friend","result","status","contents","console","log","requestName","message","err","getAllFriendsForUser","friends","forEach","SEND_MESSAGE","SEND_MESSAGE_SUCCESS","SEND_MESSAGE_FAILURE","SEND_MESSAGE_ERROR","LOAD_ALL_USERS","LOAD_ALL_USERS_SUCCESS","LOAD_ALL_USERS_ERROR","getAllUsers","getData","users","SHOW_LOGIN_MODAL","HIDE_LOGIN_MODAL","LOGIN_VERIFY_SUCCESS","LOGIN_VERIFY_FAILURE","LOGIN_VERIFY_ERROR","SIGNUP_SUCCESSFUL","SIGNUP_FAILURE","USER_SIGNOUT","displayLoginDialog","verifyLogin","password","loginSuccessful","loginFailure","userSignup","signupSuccessful","signupFailure","SideBar","alt","src","loggedIn","onClick","signoutUser","role","style","textAlign","width","showLoginDialog","href","React","connect","screenName","PageMask","position","left","right","bottom","top","backgroundColor","zIndex","display","transition","hideLoginDialog","loginDialog","isLoginDialogVisible","ChatElement","side","userIsSender","userIsReceiver","content","sender","date","dayOfMonth","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","diffMs","Date","diffSec","Math","round","diffMin","diffHour","toString","slice","concat","toFixed","formatDate","timeSent","propType","PropTypes","string","ChatCardComponent","lastElementLoc","createRef","colorArray","isChatOpened","toggleChatMode","goToLastChat","setState","assign","getStandardColor","hash","_this2","timeout","setTimeout","current","scrollIntoView","_this3","chatElms","allChatMessages","messages","len","index","push","ChatCardComponent_ChatElement","key","Fragment","minWidth","padding","height","lineHeight","background","overflowY","ref","paddingLeft","action","value","sendMessage","paddingBottom","color","flex","transform","e","i","charCodeAt","screen","details","home","chats","otherUser","receiver","_getState$login$userD2","getTime","NoUserLoggedInStyle","styled","div","_templateObject","PageHolder","visibleScreen","HomePage","AllUsersPage","rootPage_HelpPage","ChatCardList","val","src_components_ChatCardComponent","HelpPage","NotLoggedInPage","noUserLoggedInImg","maxWidth","maxHeight","margin","RootPage","rootPage_NotLoggedInPage","LoginDialog","userNameSignup","passwordSignup","confirmPasswordSignup","userNameLogin","passwordLogin","dialogOpen","statusMessage","loginVerify","preventDefault","trim","objectSpread","signupUser","showMessage","loginDialogMessage","messageClassName","isSuccess","errorMessage","open","node","loginReducer","newloginDialog","newUserData","screenReducer","ScreenActions","produce","draft","newState","reducer","combineReducers","store","createLogger","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","render","es","pageMask","ReactDOM","createPortal","components_loginDialog","document","getElementById","rootPage","components_sideBar","header","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8254404e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noUserLoggedIn.347ea58c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from \"react\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"mdl-layout__header-row\">\n        <span className=\"mdl-layout-title\">Home</span>\n        <div className=\"mdl-layout-spacer\"/>\n        <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--expandable\">\n          <label className=\"mdl-button mdl-js-button mdl-button--icon\" htmlFor=\"search\">\n            <i className=\"material-icons\">search</i>\n          </label>\n          <div className=\"mdl-textfield__expandable-holder\">\n            <input className=\"mdl-textfield__input\" type=\"text\" id=\"search\"/>\n            <label className=\"mdl-textfield__label\" htmlFor=\"search\">\n              Enter your query...\n            </label>\n          </div>\n        </div>\n        <button\n          className=\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\"\n          id=\"hamburger\">\n          <i className=\"material-icons\">more_vert</i>\n        </button>\n        <ul className=\"mdl-menu mdl-js-menu mdl-js-ripple-effect mdl-menu--bottom-right\" htmlFor=\"hamburger\">\n          <li className=\"mdl-menu__item\">About</li>\n          <li className=\"mdl-menu__item\">Contact</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","export function postData(url = ``, data = {}) {\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json()); // parses JSON response into native Javascript objects\n}\n\nexport function getData(url = ``, data = {}) {\n  // Default options are marked with *\n  return fetch(url, {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n  })\n    .then(response => response.json()); // parses JSON response into native Javascript objects\n}","import {postData, getData} from \"./_util\";\n\nexport const hostname = \"http://192.168.0.192:8080\";\n\nexport const SHOW_SCREEN = \"SHOW_SCREEN\";\nexport const SCREEN_NOT_FOUND = \"SCREEN_NOT_FOUND\";\n\nexport const LOAD_USER_FRIENDS = \"LOAD_USER_FRIENDS\";\nexport const LOAD_USER_FRIENDS_SUCCESS = \"LOAD_USER_FRIENDS_SUCCESS\";\n\nexport const LOAD_USER_FRIEND_ALL_MESSAGE_FINISH = \"LOAD_USER_FRIEND_ALL_MESSAGE_FINISH\";\nexport const LOAD_FAILURE = \"LOAD_FAILURE\";\nexport const LOAD_ERROR = \"LOAD_ERROR\";\n\nexport function showScreen(name = \"home\") {\n  let listOfPages = [\"home\", \"allUsers\", \"help\"];\n  if (listOfPages.includes(name)) {\n    return {\n      type: SHOW_SCREEN,\n      name: name,\n    }\n  } else {\n    return {\n      type: SCREEN_NOT_FOUND,\n    }\n  }\n}\n\nexport function getAllMessagesForUser(other_user) {\n  return (dispatch, getState) => {\n    let {user, token} = getState().login.userData;\n\n    return postData(hostname + \"/rest/message/getAllMessages/\",\n      {\n        \"username\": user,\n        \"token\": token,\n        \"friend\": other_user,\n      }\n    ).then((result) => {\n        if (result.status === true) {\n          return dispatch({type: LOAD_USER_FRIEND_ALL_MESSAGE_FINISH, friend: other_user, contents: result.contents});\n        } else {\n          console.log(result);\n          return dispatch({type: LOAD_FAILURE, requestName: \"getAllMessagesForUser\", message: result.message});\n        }\n      }, (err) => {\n        console.log(err);\n        return dispatch({type: LOAD_ERROR, requestName: \"getAllMessagesForUser\"})\n      }\n    )\n  }\n}\n\nexport function getAllFriendsForUser() {\n  return (dispatch, getState) => {\n    dispatch({type: LOAD_USER_FRIENDS});\n    let username = getState().login.userData.user;\n    let token = getState().login.userData.token;\n    return postData(hostname + \"/rest/message/getUserFriends/\",\n      {\n        \"username\": username,\n        \"token\": token\n      }\n    ).then((result) => {\n      if (result.status === true) {\n        result.friends.forEach((friend) => {\n          dispatch(getAllMessagesForUser(friend))\n        });\n        // if (result.friends == []) {\n        //   return dispatch({type: LOAD_USER_FRIENDS_SUCCESS, friends: []});\n        // }\n\n        return dispatch({type: LOAD_USER_FRIENDS_SUCCESS, friends: result.friends});\n      } else {\n        return dispatch({type: LOAD_FAILURE, requestName: \"getAllFriendsForUser\", message: result.message});\n      }\n    }, (err) => {\n      console.log(err);\n      return dispatch({type: LOAD_ERROR, requestName: \"getAllFriendsForUser\"})\n    })\n  }\n}\n\nexport const SEND_MESSAGE = \"SEND_MESSAGE\";\nexport const SEND_MESSAGE_SUCCESS = \"SEND_MESSAGE_SUCCESS\";\nexport const SEND_MESSAGE_FAILURE = \"SEND_MESSAGE_FAILURE\";\nexport const SEND_MESSAGE_ERROR = \"SEND_MESSAGE_ERROR\";\n\nexport function sendMessage(receiver, content) {\n  return (dispatch, getState) => {\n    dispatch({type: SEND_MESSAGE, content: content});\n    let {user, token} = getState().login.userData;\n    return postData(hostname + \"/rest/message/sendMessage/\",\n      {\n        \"username\": user,\n        \"token\": token,\n        \"receiver\": receiver,\n        \"content\": content,\n      }\n    ).then((result) => {\n        if (result.status === true) {\n          setTimeout(() => dispatch(getAllMessagesForUser(receiver)), 700);\n          return dispatch({\n            type: SEND_MESSAGE_SUCCESS, receiver: receiver, contents:\n              {\n                \"username\": user,\n                \"receiver\": receiver,\n                \"message\": content,\n                \"timeSent\": (new Date()).getTime() / 1000\n              }\n          });\n        } else {\n          console.log(result);\n          return dispatch({type: SEND_MESSAGE_FAILURE, requestName: \"sendMessage\", message: result.message});\n        }\n      }, (err) => {\n        console.log(err);\n        return dispatch({type: SEND_MESSAGE_ERROR, requestName: \"sendMessage\", message: \"Network/API issues\"})\n      }\n    )\n  }\n}\n\nexport const LOAD_ALL_USERS = \"LOAD_ALL_USERS\";\nexport const LOAD_ALL_USERS_SUCCESS = \"LOAD_ALL_USERS_SUCCESS\";\nexport const LOAD_ALL_USERS_ERROR = \"LOAD_ALL_USERS_ERROR\";\n\nexport function getAllUsers() {\n  return (dispatch) => {\n    dispatch({type: LOAD_ALL_USERS});\n    return getData(hostname + \"/rest/user/\").then((result) => {\n        return dispatch({type: LOAD_ALL_USERS_SUCCESS, users: result});\n      }, (err) => {\n        console.log(err);\n        return dispatch({type: LOAD_ALL_USERS_ERROR, requestName: \"getAllUsers\"})\n      }\n    )\n  }\n}\n\n// export const LOAD_USER_FRIENDS_MESSAGE_PEEK = \"LOAD_USER_FRIENDS_MESSAGE_PEEK\";\n// export const LOAD_USER_FRIENDS_MESSAGE_PEEK_SUCCESS = \"LOAD_USER_FRIENDS_MESSAGE_PEEK_SUCCESS\";\n//\n// export function peekMessagesForUserWithFriend(friend) {\n//   return (dispatch, getState) => {\n//     dispatch({type: LOAD_USER_FRIENDS_MESSAGE_PEEK});\n//     let username = getState().login.userData.user;\n//     let token = getState().login.userData.token;\n//     return postData(hostname + \"/rest/message/peekMessages/\",\n//       {\n//         \"username\": username,\n//         \"token\": token\n//       }\n//     ).then((result) => {\n//       if (result.status === true) {\n//         return dispatch({type: LOAD_USER_FRIENDS_MESSAGE_PEEK_SUCCESS, friends: result.friends});\n//       } else {\n//         return dispatch({type: LOAD_FAILURE, requestName: \"peekMessagesForUserWithFriend\", message: result.message});\n//       }\n//     }, (err) => {\n//       console.log(err);\n//       return dispatch({type: LOAD_ERROR, requestName: \"peekMessagesForUserWithFriend\"})\n//     })\n//   }\n// }\n\n\n\n","import {getAllFriendsForUser, getAllUsers, showScreen} from \"./screen\";\n\nimport {postData, getData} from \"./_util\";\n\nexport const hostname = \"http://192.168.0.192:8080\";\n\nexport const SHOW_LOGIN_MODAL = 'SHOW_LOGIN_MODAL';\nexport const HIDE_LOGIN_MODAL = 'HIDE_LOGIN_MODAL';\n\nexport const VERIFY_LOGIN = \"VERIFY_LOGIN\";\nexport const LOGIN_VERIFY_SUCCESS = \"LOGIN_VERIFY_SUCCESS\";\nexport const LOGIN_VERIFY_FAILURE = \"LOGIN_VERIFY_FAILURE\";\nexport const LOGIN_VERIFY_ERROR = \"LOGIN_VERIFY_ERROR\";\n\nexport const USER_SIGNUP = \"USER_SIGNUP\";\nexport const SIGNUP_SUCCESSFUL = \"SIGNUP_SUCCESSFUL\";\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\n\nexport const USER_SIGNOUT = \"USER_SIGNOUT\";\n\n// export const SAVE_LOGIN_TOKEN = \"SAVE_LOGIN_TOKEN\"; // TODO\n\n\nexport function displayLoginDialog(status) {\n  if (status) {\n    return {\n      type: SHOW_LOGIN_MODAL,\n    };\n  } else {\n    return {\n      type: HIDE_LOGIN_MODAL,\n    };\n  }\n}\n\nlet verifyLogin = (username, password) => ({\n  type: VERIFY_LOGIN,\n  username: username,\n  password: password,\n});\n\nlet loginSuccessful = (username, token) => ({\n  type: LOGIN_VERIFY_SUCCESS,\n  username: username,\n  token: token,\n});\n\nlet loginFailure = (message) => ({\n  type: LOGIN_VERIFY_FAILURE,\n  message: message,\n});\n\n\nexport function loginVerify(username, password) {\n  return dispatch => {\n    dispatch(verifyLogin(username, password));\n    return postData(hostname + \"/rest/user/login/\",\n      {\n        \"username\": username,\n        \"password\": password\n      }\n    ).then((result) => {\n      if (result.status === \"true\") {\n        setTimeout(() => {\n          dispatch(displayLoginDialog(false));\n          dispatch(showScreen(\"home\"));\n          dispatch(getAllFriendsForUser());\n          dispatch(getAllUsers());\n\n        }, 200);\n        return dispatch(loginSuccessful(result.user, result.token));\n      } else {\n        return dispatch(loginFailure(result.message));\n      }\n    }, (err) => {\n      console.log(err);\n      return dispatch({\n        type: LOGIN_VERIFY_ERROR\n      })\n    })\n  }\n}\n\n\nlet userSignup = (username, password) => ({\n  type: USER_SIGNUP,\n  username: username,\n  password: password,\n});\n\nlet signupSuccessful = (username, token) => ({\n  type: SIGNUP_SUCCESSFUL,\n  username: username,\n  token: token,\n});\n\nlet signupFailure = (message) => ({\n  type: SIGNUP_FAILURE,\n  message: message,\n});\n\n\nexport function signupUser(username, password) {\n  return dispatch => {\n    dispatch(userSignup(username, password));\n    return postData(hostname + \"/rest/user/register/\",\n      {\n        \"username\": username,\n        \"password\": password\n      }\n    ).then((result) => {\n      if (result.status === \"true\") {\n        setTimeout(() => {\n          dispatch(displayLoginDialog(false));\n          dispatch(showScreen(\"home\"));\n          dispatch(getAllFriendsForUser());\n          dispatch(getAllUsers());\n\n        }, 200);\n        return dispatch(signupSuccessful(result.user, result.token));\n      } else {\n        return dispatch(signupFailure(\"Signup Failure\"));\n      }\n    }, (err) => {\n      console.log(err);\n      return dispatch({\n        type: LOGIN_VERIFY_ERROR\n      })\n    })\n  }\n}\n\nexport function signoutUser() {\n  return dispatch => {\n    console.log(\"test signOut\");\n    return dispatch({\n      type: USER_SIGNOUT,\n    })\n  }\n}","import React from \"react\";\nimport {displayLoginDialog, signoutUser} from \"../actions/login\";\nimport {showScreen} from \"../actions/screen\";\nimport {connect} from \"react-redux\";\nimport \"./sideBar.css\";\n\nclass SideBar extends React.Component {\n  render() {\n    return (\n      <div>\n        <header className=\"demo-drawer-header\">\n          <img alt=\"dd\" src=\" images/user.jpg\" className=\" demo-avatar\"/>\n          {!this.props.userData.loggedIn ?\n            <div className=\" demo-avatar-dropdown\">\n              <button type=\"button\"\n                      className=\"mdl-button  mdl-button--raised mdl-button--colored\"\n                      style={{textAlign: \"center\", width: \"100%\"}} onClick={this.props.showLoginDialog}>Login\n              </button>\n            </div>\n            :\n            <div className=\" demo-avatar-dropdown\">\n              <span>{this.props.userData.user}</span>\n              <div className=\" mdl-layout-spacer\">\n              </div>\n              <button\n                id=\" logoutBtn\"\n                className=\" mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\"\n                onClick={this.props.signoutUser}>\n                <i className=\"material-icons\" role=\"presentation\">\n                  exit_to_app\n                </i>\n              </button>\n            </div>\n          }\n        </header>\n        <nav className=\" demo-navigation mdl-navigation mdl-color--blue-grey-800\" id=\" sidebarLinksPlugPoint\">\n          <a className=\" mdl-navigation__link\" href=\"#home\" onClick={() => this.props.showScreen(\"home\")}>\n            <i className=\" mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\"> home </i>\n            Home\n          </a>\n          <a className=\" mdl-navigation__link\" href=\"#all_users\" onClick={() => this.props.showScreen(\"allUsers\")}>\n            <i className=\" mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\"> inbox </i>\n            All Users </a>\n          <div className=\" mdl-layout-spacer\">\n          </div>\n          <div className=\" mdl-layout-spacer\">\n          </div>\n          <a className=\" mdl-navigation__link\" href=\"#help\" onClick={() => this.props.showScreen(\"help\")}>\n            <i className=\" mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\">\n              help_outline\n            </i>\n            <span className=\" visuallyhidden\">Help</span>\n            Help\n          </a>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userData: {\n    loggedIn: state.login.userData.loggedIn,\n    user: state.login.userData.user,\n    token: state.login.userData.token,\n  },\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signoutUser: () => dispatch(signoutUser()),\n  showLoginDialog: () => dispatch(displayLoginDialog(true)),\n  showScreen: (screenName) => dispatch(showScreen(screenName)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SideBar)\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux'\nimport {displayLoginDialog} from \"../actions/login\";\n\nclass PageMask extends Component {\n  render() {\n    return (<div style={{\n      position: \"fixed\", left: 0, right: 0, bottom: 0,\n      top: 0, backgroundColor: \"rgba(0, 0, 0, 0.25)\", zIndex: 10, display: this.props.display ? \"\" : \"none\",\n      transition: \"backgroundColor 0.3s\"\n    }} onClick={this.props.hideLoginDialog}/>);\n  }\n}\n\nlet mapStateToProps = state => ({\n    display: state.login.loginDialog.isLoginDialogVisible\n  })\n;\n\nlet mapDispatchToProps = dispatch => ({\n  hideLoginDialog: () => dispatch(displayLoginDialog(false)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageMask);","import React from \"react\";\nimport {displayLoginDialog} from \"../actions/login\";\nimport {sendMessage} from \"../actions/screen\";\nimport {connect} from \"react-redux\";\n// import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport \"./ChatCardComponent.css\"\n\nfunction formatDate(date) {\n  let dayOfMonth = date.getDate();\n  let month = date.getMonth() + 1;\n  let year = date.getFullYear();\n  let hour = date.getHours();\n  let minutes = date.getMinutes();\n  let diffMs = new Date() - date;\n  let diffSec = Math.round(diffMs / 1000);\n  let diffMin = diffSec / 60;\n  let diffHour = diffMin / 60;\n\n  year = year.toString().slice(-2);\n  month = month < 10 ? '0' + month : month;\n  dayOfMonth = dayOfMonth < 10 ? '0' + dayOfMonth : dayOfMonth;\n\n  if (diffSec < 1) {\n    return 'right now';\n  } else if (diffMin < 1) {\n    return `${diffSec.toFixed(0)} sec. ago`\n  } else if (diffHour < 1) {\n    return `${diffMin.toFixed(0)} min. ago`\n  } else {\n    return `${dayOfMonth}.${month}.${year} ${hour}:${minutes}`\n  }\n}\n\nclass ChatElement extends React.Component {\n  render() {\n    let side = \"\";\n    if (this.props.userIsSender) side = \"self\";\n    else if (this.props.userIsReceiver) side = \"other\";\n\n    return (\n      <li className={side}>\n        <div className=\"avatar\">\n        </div>\n        <div className=\"messages\">\n          <p>{this.props.content}</p>\n          <span>{this.props.userIsReceiver ? this.props.sender + \" • \" : \"\"} {formatDate(new Date(this.props.timeSent * 1000))}</span>\n        </div>\n      </li>\n    );\n  }\n}\n\nChatElement.propType = {\n  userIsSender: PropTypes.string,\n  userIsReceiver: PropTypes.string,\n  content: PropTypes.string,\n};\n\nclass ChatCardComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.lastElementLoc = React.createRef();\n    this.content = React.createRef();\n\n    this.colorArray = [\"#4b5dbd\", \"#44a1f4\", \"#4ab2f6\", \"#4dc3da\", \"#3a9f93\", \"#5eb659\", \"#826051\", \"#6d8896\",\n      \"#a8a8a7\", \"#f36624\", \"#ef543b\", \"#e6396c\", \"#a337b9\", \"#7247c0\"];\n    this.state = {\n      isChatOpened: false,\n    };\n\n    this.toggleChatMode = () => {\n      if (!this.state.isChatOpened) {         // just opened, show the last message\n        this.goToLastChat();\n      }\n      this.setState(Object.assign({}, this.state, {isChatOpened: !this.state.isChatOpened}))\n    };\n    this.getStandardColor = (name) => this.colorArray[ChatCardComponent.hash(name) % this.colorArray.length];\n  }\n\n  static hash(e) {\n    let hash = 0, i, chr;\n    if (e.length === 0) return hash;\n    for (i = 0; i < e.length; i++) {\n      chr = e.charCodeAt(i);\n      hash = ((hash << 3) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n  };\n\n  goToLastChat(timeout = 20) {\n    setTimeout(() => this.lastElementLoc.current.scrollIntoView(false), timeout);\n  }\n\n  render() {\n    let chatElms = [];\n    if (this.props.friend in this.props.allChatMessages) {\n      let messages = this.props.allChatMessages[this.props.friend];\n      let len = messages.length;\n      messages.forEach((message, index) => {\n        if (message.sender === this.props.friend) {\n          console.log(message.sender, this.props.friend, (message.sender !== this.props.friend))\n\n          chatElms.push(<ChatElement key={index} userIsReceiver content={message.message} timeSent={message.timeSent}/>)\n\n        } else {\n          console.log(message.sender, this.props.friend, (message.sender == this.props.friend))\n\n          chatElms.push(<ChatElement key={index} userIsSender content={message.message} timeSent={message.timeSent}/>)\n        }\n      });\n      chatElms = chatElms.slice(len - (this.state.isChatOpened ? len : 3), len);\n    }\n\n    this.goToLastChat(20);\n\n    return <React.Fragment>\n      <div className={\"chat-person-card mdl-card mdl-shadow--2dp mdl-cell \" +\n      (this.state.isChatOpened ? \"mdl-cell--12-col\" : \"mdl-cell--4-col\")}\n           style={{backgroundColor: this.getStandardColor(this.props.friend)}}>\n        <div className=\"mdl-card__title\">\n        <span>\n          {this.props.friend}\n        </span>\n          {this.state.isChatOpened ?\n            <React.Fragment>\n              <div className=\"mdl-layout-spacer\">\n              </div>\n              < button className=\"mdl-button mdl-js-button mdl-button--raised\" onClick={this.toggleChatMode}\n                       style={{\n                         minWidth: \"inherit\", padding: \"0px 7px\", height: 'inherit',\n                         lineHeight: \"28px\", background: \"lightgrey\"\n                       }}> X\n              </button>\n            </React.Fragment>\n            :\n            \"\"\n          }\n\n        </div>\n        <div className=\"mdl-card__supporting-text  mdl-card--border previous-chat-details \"\n             style={{width: \"initial\", height: this.state.isChatOpened ? \"50vh\" : \"inherit\"}}>\n          <ol className=\"discussion\"\n              style={{width: \"initial\", overflowY: this.state.isChatOpened ? \"scroll\" : \"hidden\", height: \"100%\",}}>\n            {chatElms}\n            <li ref={this.lastElementLoc}/>\n          </ol>\n        </div>\n        <div className=\"mdl-card__actions mdl-card--border\" style={{padding: \"0px\"}}>\n\n          {this.state.isChatOpened ?\n            <div className=\"chat-box-message-form\" style={{paddingLeft: \"20px\", width: \"100%\"}}>\n              <div className=\"mdl-textfield mdl-js-textfield\" style={{width: \"calc(100% - 100px)\"}}>\n                <form action=\"#\">\n                  <input ref={this.content} className=\"mdl-textfield__input\" type=\"text\" id=\"asdas\"/>\n                </form>\n              </div>\n              <button className=\"mdl-button mdl-js-button mdl-button--raised mdl-button--accent\"\n                      onClick={() => {\n                        if (this.content.current.value !== \"\") {\n                          this.props.sendMessage(this.props.friend, this.content.current.value);\n                        }\n                      }}\n                      style={{right: \"-15px\", height: \"50px\", paddingBottom: \"5px\"}}>\n                <i className=\"material-icons\" style={{color: \"white\"}}>send</i>\n              </button>\n            </div>\n            :\n            <div className=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\"\n                 style={{width: \"100%\", padding: \"10px 25px 10px 15px\"}} onClick={this.toggleChatMode}>\n              <div style={{display: \"flex\"}}>\n                <span>Chat</span>\n                <span style={{flex: 1}}/>\n                <i className=\"material-icons\" style={{transform: \"translate(5px, 7px)\"}}>chat</i>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    </React.Fragment>\n      ;\n  }\n}\n\nconst mapStateToProps = state => ({\n    isLoginDialogVisible: state.login.loginDialog.isLoginDialogVisible,\n    userData: state.login.userData,\n    allChatMessages: state.screen.details.home.chats,\n  })\n;\n\nconst mapDispatchToProps = dispatch => ({\n  showLoginDialog: () => dispatch(displayLoginDialog(true)),\n  hideLoginDialog: () => dispatch(displayLoginDialog(false)),\n  sendMessage: (otherUser, content) => dispatch(sendMessage(otherUser, content)),\n\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatCardComponent)\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport ChatCardComponent from \"./ChatCardComponent\";\nimport noUserLoggedInImg from \"./noUserLoggedIn.svg\";\n\nimport styled from 'styled-components';\n\nconst NoUserLoggedInStyle = styled.div`\nheight:100%;\nwidth: 100%;\ndisplay: flex;\njustify-content: center;\n opacity: 0.5;\n`;\n\nlet PageHolder = connect(state => ({\n  visibleScreen: state.screen.visibleScreen\n}))(\n  (props) => {\n    switch (props.visibleScreen) {\n      case \"home\":\n        return <HomePage/>;\n      case \"allUsers\":\n        return <AllUsersPage/>;\n      case \"help\":\n        return <HelpPage/>;\n      default:\n        return <HomePage/>;\n    }\n  }\n);\n\nlet AllUsersPage = connect(state => ({\n  users: state.screen.details.home.users\n}))((props) => {\n  let ChatCardList = [];\n  props.users.forEach((val, i) => ChatCardList.push(<ChatCardComponent key={i} friend={val}/>));\n  return <div className=\"mdl-grid \">\n    {ChatCardList}\n  </div>;\n});\n\nlet HomePage = connect(state => ({\n  friends: state.screen.details.home.friends\n}))((props) => {\n  let ChatCardList = [];\n  props.friends.forEach((val, i) => ChatCardList.push(<ChatCardComponent key={i} friend={val}/>));\n  return <div className=\"mdl-grid \">\n    {ChatCardList}\n  </div>;\n});\n\nlet HelpPage = () =>\n  <div className=\"mdl-grid \">\n    <p className=\"mdl-cell--12-col\"><h3>Help Pages</h3></p>\n    <p className=\"mdl-cell--12-col\">\n      <h6>Chat with your friends on the <b><i>Home</i></b> Page </h6>\n      <h6>If you can't find your friends on the <b><i>Home</i></b> Page, start chat on the <b><i>All Users</i></b> Page.\n      </h6>\n    </p>\n\n  </div>;\n\nlet NotLoggedInPage = () =>\n  <div className=\"mdl-grid \" style={{height: \"100%\"}}>\n    <NoUserLoggedInStyle>\n      <img alt=\"no User logged in\" src={noUserLoggedInImg} style={{\n        width: \"auto\",\n        height: \"auto\",\n        maxWidth: \"100%\",\n        maxHeight: \"90%\",\n        margin: \"200px\",\n      }}/>\n    </NoUserLoggedInStyle>\n  </div>;\n\n\nclass RootPage extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.userData.loggedIn ? <PageHolder/> : <NotLoggedInPage/>}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    userData: state.login.userData,\n  })\n)(RootPage)\n\n","import React from \"react\";\n\nimport {connect} from 'react-redux'\nimport {displayLoginDialog, loginVerify, signupUser} from \"../actions/login\";\nimport './loginDialog.css';\n\nclass LoginDialog extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n    this.userNameSignup = \"\";\n    this.passwordSignup = \"\";\n    this.confirmPasswordSignup = \"\";\n\n    this.userNameLogin = \"\";\n    this.passwordLogin = \"\";\n\n    this.state = {\n      dialogOpen: false,\n      statusMessage: \"\"\n    };\n\n    this.loginVerify = (e) => {\n      e.preventDefault();\n      if (!this.userNameLogin.value.trim() || !this.passwordLogin.value.trim()) {\n        this.setState({...this.state, ...{statusMessage: \"Please Enter Username/Password\"}});\n        return\n      }\n      this.setState({...this.state, ...{statusMessage: \"\"}});\n      this.props.loginVerify(this.userNameLogin.value.trim(), this.passwordLogin.value.trim());\n    };\n\n    this.signupUser = (e) => {\n      e.preventDefault();\n      if (!this.userNameSignup.value.trim() || !this.passwordSignup.value.trim()\n        || !this.confirmPasswordSignup.value.trim()) {\n        this.setState({...this.state, ...{statusMessage: \"Please Enter all fields\"}});\n        return;\n      } else if (this.passwordSignup.value.trim() !== this.confirmPasswordSignup.value.trim()) {\n        this.setState({...this.state, ...{statusMessage: \"The Passwords don't match\"}});\n        return;\n      }\n      this.setState({...this.state, ...{statusMessage: \"\"}});\n      this.props.signupUser(this.userNameSignup.value.trim(), this.passwordSignup.value.trim());\n    };\n\n  }\n\n  render() {\n    let showMessage = (this.state.statusMessage !== \"\" || this.props.loginDialogMessage !== \"\");\n    let messageClassName = this.props.isSuccess ? \"isa_success\" : \"isa_error\";\n    let errorMessage = this.state.statusMessage === \"\" ? this.props.loginDialogMessage : this.state.statusMessage;\n    return (\n      <div>\n        <dialog className=\"mdl-dialog\" open={this.props.isLoginDialogVisible} style={{zIndex: 15}}>\n          <div className=\"mdl-dialog__content\">\n            <div className=\"mdl-tabs mdl-js-tabs mdl-js-ripple-effect\">\n              <div className=\"mdl-tabs__tab-bar\">\n                <a href=\"#login-panel\" className=\"mdl-tabs__tab is-active\">Login</a>\n                <a href=\"#signup-panel\" className=\"mdl-tabs__tab\">Signup</a>\n              </div>\n              <div className=\"mdl-tabs__panel is-active\" id=\"login-panel\">\n                {showMessage ? <div className={messageClassName}> {errorMessage}</div> : \"\"}\n\n                <form action=\"#\">\n                  <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                    <input className=\"mdl-textfield__input\" type=\"text\" id=\"sample1\"\n                           ref={node => (this.userNameLogin = node)}/>\n                    <label className=\"mdl-textfield__label\" htmlFor=\"sample1\">Username</label>\n                  </div>\n                  <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                    <input className=\"mdl-textfield__input\" type=\"password\" id=\"sample2\"\n                           ref={node => (this.passwordLogin = node)}/>\n                    <label className=\"mdl-textfield__label\" htmlFor=\"sample2\">Password</label>\n                  </div>\n                </form>\n\n                <div className=\"mdl-dialog__actions mdl-dialog__actions--full-width\">\n                  <button type=\"button\"\n                          className=\"mdl-button  mdl-button--raised mdl-button--colored\"\n                          style={{textAlign: \"center\"}} onClick={this.loginVerify}>Login\n                  </button>\n                </div>\n\n              </div>\n              <div className=\"mdl-tabs__panel\" id=\"signup-panel\">\n                {showMessage ? <div className={messageClassName}> {errorMessage}</div> : \"\"}\n\n                <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                  <input className=\"mdl-textfield__input\" type=\"text\" id=\"sample3\"\n                         ref={node => (this.userNameSignup = node)}/>\n                  <label className=\"mdl-textfield__label\" htmlFor=\"sample3\">Username</label>\n                </div>\n                <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                  <input className=\"mdl-textfield__input\" type=\"password\" id=\"sample4\"\n                         ref={node => (this.passwordSignup = node)}/>\n                  <label className=\"mdl-textfield__label\" htmlFor=\"sample4\">Password</label>\n                </div>\n                <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                  <input className=\"mdl-textfield__input\" type=\"password\" id=\"sample5\"\n                         ref={node => (this.confirmPasswordSignup = node)}/>\n                  <label className=\"mdl-textfield__label\" htmlFor=\"sample5\">Confirm Password</label>\n                </div>\n                <div className=\"mdl-dialog__actions mdl-dialog__actions--full-width\">\n                  <button type=\"button\"\n                          className=\"mdl-button  mdl-button--raised  mdl-button--colored\"\n                          style={{textAlign: \"center\"}} onClick={this.signupUser}>Signup\n                  </button>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        </dialog>\n\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    isLoginDialogVisible: state.login.loginDialog.isLoginDialogVisible,\n    isSuccess: state.login.loginDialog.isSuccess,\n    loginDialogMessage: state.login.loginDialog.loginDialogMessage,\n  })\n;\n\nconst mapDispatchToProps = dispatch => ({\n  showLoginDialog: () => dispatch(displayLoginDialog(true)),\n  hideLoginDialog: () => dispatch(displayLoginDialog(false)),\n  loginVerify: (username, password) => dispatch(loginVerify(username, password)),\n  signupUser: (username, password) => dispatch(signupUser(username, password)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginDialog)\n","import {\n  HIDE_LOGIN_MODAL,\n  LOGIN_VERIFY_FAILURE,\n  LOGIN_VERIFY_SUCCESS,\n  SHOW_LOGIN_MODAL,\n  SIGNUP_FAILURE,\n  SIGNUP_SUCCESSFUL,\n  USER_SIGNOUT\n} from \"../actions/login\";\n\n\nfunction loginReducer(state, action) {\n  if (typeof state === 'undefined') {\n    return {\n      userData: {\n        loggedIn: false,\n        user: \"\",\n        token: \"\",\n      },\n      loginDialog: {\n        isLoginDialogVisible: false,\n        loginDialogMessage: \"\",\n        isSuccess: false,\n      }\n    }\n  }\n  let newloginDialog, newUserData;\n\n  switch (action.type) {\n    case SHOW_LOGIN_MODAL:\n      newloginDialog = Object.assign({}, state.loginDialog, {isLoginDialogVisible: true});\n      return {...state, ...{loginDialog: newloginDialog}};\n    case HIDE_LOGIN_MODAL:\n      newloginDialog = Object.assign({}, state.loginDialog, {isLoginDialogVisible: false});\n      return {...state, ...{loginDialog: newloginDialog}};\n    case LOGIN_VERIFY_SUCCESS:\n      newloginDialog = Object.assign({}, state.loginDialog,\n        {loginDialogMessage: \"Login Success\", isSuccess: true});\n      newUserData = {\n        loggedIn: true,\n        user: action.username,\n        token: action.token,\n      };\n      return {...state, ...{loginDialog: newloginDialog, userData: newUserData}};\n    case LOGIN_VERIFY_FAILURE:\n      newloginDialog = Object.assign({}, state.loginDialog,\n        {loginDialogMessage: action.message, isSuccess: false});\n      return {...state, ...{loginDialog: newloginDialog}};\n    case SIGNUP_SUCCESSFUL:\n      newUserData = {\n        loggedIn: true,\n        user: action.username,\n        token: action.token,\n      };\n      newloginDialog = Object.assign({}, state.loginDialog,\n        {loginDialogMessage: \"Signup Success\", isSuccess: true});\n      return {...state, ...{loginDialog: newloginDialog, userData: newUserData}};\n    case SIGNUP_FAILURE:\n      newloginDialog = Object.assign({}, state.loginDialog,\n        {loginDialogMessage: action.message, isSuccess: false});\n      return {...state, ...{loginDialog: newloginDialog}};\n    case USER_SIGNOUT:\n      newUserData = Object.assign({}, state.userData,\n        {\n          loggedIn: false,\n          user: \"\",\n          token: \"\",\n        });\n      return {...state, ...{userData: newUserData}};\n    default:\n      return state;\n  }\n}\n\nexport default loginReducer;\n","import * as ScreenActions from \"../actions/screen\";\nimport produce from \"immer\";\nimport {LOAD_ALL_USERS_SUCCESS} from \"../actions/screen\";\n\nfunction screenReducer(state, action) {\n  if (typeof state === 'undefined') {\n    return {\n      visibleScreen: \"home\",\n      details: {\n        \"home\": {\n          users: [],\n          friends: [],    // username of chat ppl\n          chats: {}        // chats with all the ppl\n        }\n      },\n    }\n  }\n  switch (action.type) {\n    case ScreenActions.SHOW_SCREEN:\n      return {...state, visibleScreen: action.name};\n    case ScreenActions.LOAD_USER_FRIENDS_SUCCESS:\n      return produce(state, (draft) => {\n        console.log(action.friends)\n        draft.details.home.friends = action.friends;\n        return draft\n      });\n    case ScreenActions.LOAD_USER_FRIEND_ALL_MESSAGE_FINISH:\n      let newState = {\n        ...state,\n        details: {...state.details, home: {...state.details.home, chats: {...state.details.home.chats}}}\n      };\n      newState.details.home.chats[action.friend] = action.contents;\n      return newState;\n    case ScreenActions.SEND_MESSAGE_SUCCESS:\n      return produce(state, (draft) => {\n        // draft.details.home.chats[action.receiver].push(action.contents);\n        return draft;\n      });\n    case ScreenActions.LOAD_ALL_USERS_SUCCESS:\n      return produce(state, (draft) => {\n        draft.details.home.users = action.users;\n        return draft;\n      });\n    default:\n      return state;\n  }\n}\n\nexport default screenReducer;","import {combineReducers} from \"redux\";\nimport loginReducer from \"./login\";\nimport screenReducer from \"./screen\";\n\n\nconst reducer = combineReducers({\n  login: loginReducer,\n  screen: screenReducer,\n});\nexport default reducer;","import React from \"react\";\nimport {render} from 'react-dom'\nimport ReactDOM from \"react-dom\";\nimport {Provider} from 'react-redux';\nimport thunkMiddleware from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\nimport {createStore, applyMiddleware} from \"redux\";\n\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Header from \"./components/header\";\nimport SideBar from \"./components/sideBar\";\nimport PageMask from \"./components/pageMask\";\nimport RootPage from \"./components/rootPage\";\nimport LoginDialog from \"./components/loginDialog\"\n\nimport reducer from './reducers/main';\nimport {displayLoginDialog,} from './actions/login';\n\nconst RootPagePortal = name => ReactDOM.createPortal(<RootPage/>, document.getElementById(\"pagePlugPoint\"));\nconst SideBarPortal = props => ReactDOM.createPortal(<SideBar/>, document.getElementById(\"sidebarPlugPoint\"));\nconst HeaderPortal = props => ReactDOM.createPortal(<Header/>, document.getElementById(\"headerPlugPoint\"));\nconst LoginPortal = props => ReactDOM.createPortal(<LoginDialog/>, document.getElementById(\"loginDialog\"));\n\n\nconst loggerMiddleware = createLogger();\nconst store = createStore(\n  reducer, /* preloadedState, */\n  composeWithDevTools(\n    applyMiddleware(\n      thunkMiddleware, // lets us dispatch() functions\n      // loggerMiddleware // neat middleware that logs actions\n    )\n    // other store enhancers if any\n  )\n);\n\n\nstore.dispatch(displayLoginDialog(true));\n\n\nrender(\n  <Provider store={store}>\n    <PageMask display={true}/>\n    <LoginPortal/>\n    <RootPagePortal/>\n    <SideBarPortal/>\n    <HeaderPortal/>\n  </Provider>\n  , document.querySelector(\"#mainroot\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}